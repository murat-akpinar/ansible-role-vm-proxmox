# Debian 12 VM
---

- name: Check if VM ID 101 already exists
  shell: qm list | grep -q ' 101 '
  register: vm_exists
  ignore_errors: true
  changed_when: false

- name: Debian 12 Clone VM from template if not exists
  shell: qm clone 100 101 --name debian --full true
  args:
    executable: /bin/bash
  when: vm_exists.rc != 0

- name: Debian 12 Notify VM already exists
  debug:
    msg: "VM ID 101 already exists, skipping clone."
  when: vm_exists.rc == 0

- name: Debian 12 Set CPU Core and RAM
  shell: "qm set 101 --cores 1 --sockets 2 --memory 2048 --numa 1 --cpu host"
  args:
    executable: /bin/bash

- name: Debian 12 Set disk size
  shell: "qm resize 101 scsi0 +50G"
  args:
    executable: /bin/bash

- name: Debian 12 Set cloud-init user
  shell: qm set 101 --ciuser "{{ hostvars['proxmox']['cloud_init_user'] }}"
  args:
    executable: /bin/bash

- name: Debian 12 Set cloud-init password
  shell: qm set 101 --cipassword "{{ hostvars['proxmox']['cloud_init_password'] }}"
  args:
    executable: /bin/bash

- name: Debian 12 Set cloud-init IP and gateway configuration
  shell: qm set 101 --ipconfig0 ip="{{ hostvars['proxmox']['cloud_init_ip'] }},gw={{ hostvars['proxmox']['cloud_init_gw'] }}"
  args:
    executable: /bin/bash

- name: Debian 12 Copy SSH public key to Proxmox server under user directory
  copy:
    src: files/ssh_key.pub
    dest: "/root/debian_key.pub"
    owner: root
    group: root
    mode: '0644'

- name: Debian 12 Set SSH public key for the VM using cloud-init
  shell: qm set 101 --sshkey /root/debian_key.pub
  args:
    executable: /bin/bash
